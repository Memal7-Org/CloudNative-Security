name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'wizdemo'
      acr_name:
        description: 'ACR Name'
        required: false
      aks_cluster_name:
        description: 'AKS Cluster Name'
        required: false
      image_tag:
        description: 'Image tag to deploy'
        required: false
        default: 'latest'
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        type: string
        default: 'wizdemo'
      acr_name:
        description: 'ACR Name'
        required: false
        type: string
      aks_cluster_name:
        description: 'AKS Cluster Name'
        required: false
        type: string
      image_tag:
        description: 'Image tag to deploy'
        required: false
        type: string
        default: 'latest'

jobs:
  kubernetes-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set environment variables
      run: |
        echo "RESOURCE_GROUP=ODL-candidate-sandbox-02-1652694" >> $GITHUB_ENV
        
        # Use input values if provided, otherwise try to get from Terraform
        if [ -n "${{ inputs.acr_name }}" ]; then
          echo "ACR_NAME=${{ inputs.acr_name }}" >> $GITHUB_ENV
        else
          echo "ACR_NAME=acrwizdemogrubworm" >> $GITHUB_ENV
        fi
        
        if [ -n "${{ inputs.aks_cluster_name }}" ]; then
          echo "AKS_CLUSTER_NAME=${{ inputs.aks_cluster_name }}" >> $GITHUB_ENV
        else
          echo "AKS_CLUSTER_NAME=aks-wizdemo" >> $GITHUB_ENV
        fi
        
        # Set image tag - use input, commit SHA, or v1 as fallback
        IMAGE_TAG="${{ inputs.image_tag || github.sha || 'v1' }}"
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        
        # Set environment variable
        echo "ENVIRONMENT=${{ inputs.environment || 'wizdemo' }}" >> $GITHUB_ENV
      
    - name: Login to Azure
      run: |
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Login to ACR
      run: |
        az acr login --name ${{ env.ACR_NAME }}
        ACR_SERVER=$(az acr show --name ${{ env.ACR_NAME }} --query loginServer -o tsv)
        echo "ACR_SERVER=$ACR_SERVER" >> $GITHUB_ENV
        
    - name: Set AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }} --admin
        
    - name: Extract MongoDB connection string from Terraform output
      run: |
        cd ./01_terraform
        CONNECTION_STRING=$(terraform output -raw mongodb_connection_string)
        # Create a Kubernetes secret
        kubectl create secret generic mongodb-secret --from-literal=connection-string="$CONNECTION_STRING" --dry-run=client -o yaml | kubectl apply -f -
        
    - name: Update Kubernetes manifest with image tags
      run: |
        # Replace placeholder image references with actual values
        sed -i "s|acrwizdemohyena.azurecr.io/backend-app:v1|${{ env.ACR_SERVER }}/backend-app:${{ env.IMAGE_TAG }}|g" ./02_kubernetes/deployment.yaml
        sed -i "s|acrwizdemohyena.azurecr.io/web-app:v1|${{ env.ACR_SERVER }}/web-app:${{ env.IMAGE_TAG }}|g" ./02_kubernetes/deployment.yaml
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f ./02_kubernetes/deployment.yaml
        kubectl apply -f ./02_kubernetes/service.yml
        
    - name: Verify deployment
      run: |
        kubectl get deployments
        kubectl get pods
        kubectl get services